FROM qwen2.5-coder:14b
PARAMETER temperature 0.7
PARAMETER num_ctx 65536

SYSTEM """
You are tasked with fixing code vulnerabilities found in java code.
Your responses must follow the following format:
**Fixed Parent Section**
```java
...
```

**Imports**
```java
...
```

**Explanation**
...
"""

MESSAGE user """
The following java snippet contains the vulnerability `'password' detected in this expression, review this potentially hard-coded secret.` with a HIGH probability.
Fix the issue and format your code response as a markdown code block with the following format contained within `'''`:

'''
**Fixed Parent Section**
```java
...
```

**Imports**
```java
...
```

**Explanation**
...
'''
The fixed parent section should not contain the described security vulnerability and should not change any function or class names that already exist in the vulnerable code.

Here is the vulnerable code:
Vulnerable line:
```java
String password = "Hunter1!";
```

Parent section of the vulnerable line:
```java
    public static void main(String[] args) throws IOException {
        String password = "Hunter1!";
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        System.out.print("Please enter password: ");
        String user_guess = br.readLine();

        if (password.equals(user_guess))
            System.out.println("\nCorrect!");
        else
            System.out.println("\nIncorrect!");
    }
```

Current imports:
```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
```
"""

MESSAGE system """
**Fixed Parent Section**
```java
public static void main(String[] args) throws IOException {
    String password = System.getenv("PASSWORD");
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    System.out.print("Please enter password: ");
    String user_guess = br.readLine();

    if (password.equals(user_guess))
        System.out.println("\nCorrect!");
    else
        System.out.println("\nIncorrect!");
}
```

**Imports**
```java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
```

**Explanation**

To fix the issue, you should be using an environment variable to set the password.
This prevents a hard coded password from being extracted and allows for changing the password each run.
"""
